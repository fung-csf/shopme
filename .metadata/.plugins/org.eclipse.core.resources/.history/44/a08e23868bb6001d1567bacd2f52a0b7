package com.shopme.admin;

import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;

import org.hibernate.internal.build.AllowSysOut;
import org.slf4j.LoggerFactory;
import org.slf4j.Logger;
import org.springframework.web.multipart.MultipartFile;

public class FileUploadUtil {
	
	private static final Logger LOGGER = LoggerFactory
	
	
	public static void saveFile(String uploadDir, String fileName,
			MultipartFile multipartFile) throws IOException {
		
		Path uploadPath = Paths.get(uploadDir);
		
		if(!Files.exists(uploadPath)) {
			Files.createDirectories(uploadPath);
		}
		
		//try with resource statement
		try(InputStream inputStream = multipartFile.getInputStream()){
			Path filePath = uploadPath.resolve(fileName);
			Files.copy(inputStream, filePath, StandardCopyOption.REPLACE_EXISTING);
		}catch(IOException ex){
			throw new IOException("could not save file: " + fileName, ex);
		}
	}
	
	// remove the old image in the directory to make way for the new image
	public static void cleanDir(String dir) {
		Path dirPath = Paths.get(dir);
		
		try {
				Files.list(dirPath).forEach(file -> {
					if (!Files.isDirectory(file)) {
						try {
							Files.delete(file);
						} catch(IOException ex) {
							System.out.println("could not delete file: " + file);
						}
					}
				});
		}catch (IOException ex) {
			System.out.println("could not list directory: " + dirPath );
		}
	}
}
